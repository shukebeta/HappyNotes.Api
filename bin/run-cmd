#!/bin/bash
# this script can run any command on one or a few or all remote servers that are defined in a script named 'hosts'
# in the same directory
# $1 the remote host
# $2 the command you want to run with its parameters
# $3 the data file you want to use as the input data by input redirect for the command defined in $2

if [ $# -lt 2 ]; then
    echo "Usage: ${0} 'multiple hostname separated by space' 'script with its parameters' 'data file name'"
    echo "OR"
    echo "Usage: ${0} all 'cmd and its parameters'"
    echo "for example: run-cmd all 'mysql -v -v' 05-06-add-a-field-to-table-a.sql"
    exit 1
fi
script_dir="$(dirname "$(readlink -f "$0")")"

echolog() {
  echo "$(date "+%Y-%m-%d %H:%M:%S") - in dir `pwd` - Run command:" >> ~/.run-cmd.log
  echo "$*" >> ~/.run-cmd.log
}

runcmd() {
	if [ "${3}" != "" ]; then
		echo "${1}: ${2}"
		echo '~~~~~~~~~~~~~~~~~~~~~~~~~~~'
		cmd="ssh ${1} < ${3} ${2}"
		echolog $cmd
		bash -c "$cmd"
	else
		echo "${1}: ${2}"
		echo '~~~~~~~~~~~~~~~~~~~~~~~~~~~'
		cmd="ssh ${1} ${2}"
		echolog $cmd
		bash -c "$cmd"
	fi
	echo "---------------------------"
}
if [ "${1}" == "all" ]; then
    source $script_dir/hosts
	for host in "${!hosts[@]}";
	do
		runcmd "${host}" "${2}" "${3}"
	done;
else
    eval "hostsList=(${1})"
    for host in "${hostsList[@]}";
    do
      echo ${2}
      echo ${3}
		runcmd "${host}" "${2}" "${3}"
    done;
fi
