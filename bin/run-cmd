#!/bin/bash
# Run any command on one or multiple remote servers defined in 'hosts' script
# Usage: run-cmd 'host1 host2 ...' 'command with parameters' 'data file name'
# Usage: run-cmd all 'command with parameters'
# Example: run-cmd all 'mysql -v -v' 05-06-add-a-field-to-table-a.sql

# Check if the number of arguments is correct
if [ $# -lt 2 ]; then
    echo "Usage: ${0} 'multiple hostname separated by space' 'script with its parameters' 'data file name'"
    echo "OR"
    echo "Usage: ${0} all 'cmd and its parameters'"
    echo "For example: run-cmd all 'mysql -v -v' 05-06-add-a-field-to-table-a.sql"
    exit 1
fi

# Get the directory of the script
script_dir="$(dirname "$(readlink -f "$0")")"

# Logging function
echolog() {
    echo "$(date "+%Y-%m-%d %H:%M:%S") - in dir $(pwd) - Run command:" >> ~/.run-cmd.log
    echo "$*" >> ~/.run-cmd.log
}

# Execute command on remote server
runcmd() {
    echo "${1}: ${2}"
    echo '~~~~~~~~~~~~~~~~~~~~~~~~~~~'
    cmd="ssh ${1}"
    [ -n "${3}" ] && cmd+=" < ${3}"
    cmd+=" -- ${2}"
    echolog "$cmd"
    bash -c "$cmd"
    echo "---------------------------"
}

echolog "$@"
# Execute command on all remote servers
if [ "${1}" == "all" ]; then
    source "$script_dir/hosts"
    for host in "${!hosts[@]}"; do
        runcmd "${host}" "${2}" "${3}"
    done
else
    # Split space-separated hosts into an array
    hostsList=(${1})
    for host in "${hostsList[@]}"; do
        runcmd "${host}" "${2}" "${3}"
    done
fi
